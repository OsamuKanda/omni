CREATE OR REPLACE PACKAGE BODY P月次 AS
	-------------------------------------------------------------------------------
	-- 【関数名】
	--			OMB003 月次確定更新
	-- 【内容】
	--
	--
	-- 【引数】
	--
	-- 【戻り値】
	--
	-------------------------------------------------------------------------------
	FUNCTION	月次確定更新
	(
			I_事業所CD					IN 			DM_TANT.SYOZOKJIGYOCD%TYPE
		,	I_更新プログラム			IN			DM_TANT.UDTPG1%TYPE
		,	I_担当者CD					IN			DM_TANT.TANTCD%TYPE
	)
	RETURN NUMBER
	IS
		V_月次締年月日	DM_KANRI.MONYMD%TYPE;
		V_確定日付		DM_KANRI.MONYMD%TYPE;
		T_入金合計		NUMBER;
	BEGIN
--
	Pログ.ログ出力(
				  I_事業所CD
				, I_担当者CD
				, I_更新プログラム
				, '0'
				, '処理の開始'
				, P共通.DIR_NAME
				, P共通.FILE_NAME
			);
--
	--月次締年月日
	SELECT
		MONYMD
	INTO
		V_月次締年月日
	FROM
		DM_KANRI;
--
	--仕入データ処理済データの月次更新済フラグセット。
	UPDATE DT_SHIREH
	SET		GETFLG = '1'
	,		UDTTIME3 = SYSDATE
	,		UDTUSER3 = (SELECT TANTNM FROM DM_TANT WHERE TANTCD = I_担当者CD)
	,		UDTPG3 = I_更新プログラム
	WHERE
--		TO_DATE(SIRYMD,'YYYYMMDD') < V_月次締年月日
		SIRYMD <= V_月次締年月日
	AND	GETFLG  = '0'
	;
--
	--支払データ処理済データの月次更新済フラグセット。
	UPDATE DT_SHRH
	SET		GETFLG = '1'
	,		UDTTIME3 = SYSDATE
	,		UDTUSER3 = (SELECT TANTNM FROM DM_TANT WHERE TANTCD = I_担当者CD)
	,		UDTPG3 = I_更新プログラム
	WHERE
--		TO_DATE(SHRYMD,'YYYYMMDD') < V_月次締年月日
		SHRYMD <= V_月次締年月日
	AND	GETFLG  = '0'
	;
--
	--物件ファイルの繰越処理
	--(4ヵ月前→5ヵ月前に加算)
	UPDATE DT_BUKKEN
	SET		OLD5BKING = OLD5BKING + OLD4BKING
	,		OLD5GKING = OLD5GKING + OLD4GKING
	,		OLD5ZKING = OLD5ZKING + OLD4ZKING
	,		OLD5SKING = OLD5SKING + OLD4SKING
	WHERE
		DELKBN = '0'
	;
--
	--(3ヵ月前→4ヵ月前にセット)
	UPDATE DT_BUKKEN
	SET		OLD4BKING = OLD3BKING
	,		OLD4GKING = OLD3GKING
	,		OLD4ZKING = OLD3ZKING
	,		OLD4SKING = OLD3SKING
	WHERE
		DELKBN = '0'
	;
--
	--(2ヵ月前→3ヵ月前にセット)
	UPDATE DT_BUKKEN
	SET		OLD3BKING = OLD2BKING
	,		OLD3GKING = OLD2GKING
	,		OLD3ZKING = OLD2ZKING
	,		OLD3SKING = OLD2SKING
	WHERE
		DELKBN = '0'
	;
--
	--(前月→2ヵ月前にセット)
	UPDATE DT_BUKKEN
	SET		OLD2BKING = ZBKING
	,		OLD2GKING = ZGKING
	,		OLD2ZKING = ZZKING
	,		OLD2SKING = ZSKING
	WHERE
		DELKBN = '0'
	;
--
	--(当月→前月にセット)
	UPDATE DT_BUKKEN
	SET		ZBKING = TBKING
	,		ZGKING = TGKING
	,		ZZKING = TZKING
	,		ZSKING = TSKING
	WHERE
		DELKBN = '0'
	;
--
	--(次月→当月にセット)
	UPDATE DT_BUKKEN
	SET		TBKING = JBKING
	,		TGKING = JGKING
	,		TZKING = JZKING
	,		TSKING = JSKING
	WHERE
		DELKBN = '0'
	;
--
	--(次月に０セット)
	UPDATE DT_BUKKEN
	SET		JBKING = 0
	,		JGKING = 0
	,		JZKING = 0
	,		JSKING = 0
	,		UDTTIME3 = SYSDATE
	,		UDTUSER3 = (SELECT TANTNM FROM DM_TANT WHERE TANTCD = I_担当者CD)
	,		UDTPG3 = I_更新プログラム
	WHERE
		DELKBN = '0'
	;
--
	--基準日を算出
	SELECT	TO_CHAR(ADD_MONTHS(TO_DATE(MONYMD),-12),'YYYYMMDD')
	INTO	V_確定日付
	FROM	DM_KANRI
	;
--
	FOR R_請求書番号 IN (
		SELECT
			DT_URIAGEH.SEIKYUSHONO AS SEIKYUSHONO
			,	SUM(KING) AS KING
			--↓2023.09.18 Update Kanda 2023/10/01以降の消費税計算に対応）
			--,	SUM(TAX) AS TAX
			, (CASE WHEN DT_URIAGEH.SEIKYUYMD < '20231001' THEN SUM(DT_URIAGEM.TAX) ELSE DECODE(DT_URIAGEH.TAXKBN,'0',ROUND(SUM(DT_URIAGEM.KING)/10),0) END) AS TAX
			--↑2023.09.18 Update Kanda 2023/10/01以降の消費税計算に対応）
		FROM
			DT_URIAGEH
		,	DT_URIAGEM
		,	DT_BUKKEN
		WHERE
			DT_URIAGEH.SEIKYUSHONO = DT_URIAGEM.SEIKYUSHONO
		AND
			DT_URIAGEH.DELKBN = '0'
		AND
			DT_URIAGEM.DELKBN = '0'
		AND
			DT_URIAGEH.SEIKYUYMD <= V_確定日付
		AND
--			DT_URIAGEH.OUTKBN <> '1'
			DT_URIAGEH.OUTKBN IS NULL
		AND
			DT_URIAGEH.JIGYOCD = DT_BUKKEN.JIGYOCD
		AND
			DT_URIAGEH.SAGYOBKBN = DT_BUKKEN.SAGYOBKBN
		AND
			DT_URIAGEH.RENNO = DT_BUKKEN.RENNO
		AND
			DT_BUKKEN.KANRYOYMD <> '00000000'
		AND
			DT_BUKKEN.KANRYOYMD IS NOT NULL
		GROUP BY
			DT_URIAGEH.SEIKYUSHONO
			--↓2023.09.18 Insert Kanda 2023/10/01以降の消費税計算に対応）
			, DT_URIAGEH.TAXKBN
			, DT_URIAGEH.SEIKYUYMD
			--↑2023.09.18 Insert Kanda 2023/10/01以降の消費税計算に対応）
	) LOOP
--
			UPDATE	DT_URIAGEH
			SET
				OUTKBN = '1'
			,	GETFLG = '1'
			,	UDTTIME3 = SYSDATE
			,	UDTUSER3 = (SELECT TANTNM FROM DM_TANT WHERE TANTCD = I_担当者CD)
			,	UDTPG3 = I_更新プログラム
			WHERE
			SEIKYUSHONO IN (
				SELECT
					SEIKYUSHONO
				FROM
				(
					SELECT
						SEIKYUSHONO
					,	SUM(KING) AS KING
					FROM
						DT_NYUKINM
					WHERE
						DT_NYUKINM.SEIKYUSHONO = R_請求書番号.SEIKYUSHONO
					AND
						DT_NYUKINM.DELKBN = '0'
					AND
						DT_NYUKINM.NYUKINYMD <= V_確定日付
					GROUP BY
						SEIKYUSHONO
				) T_入金合計
				WHERE
						R_請求書番号.KING + R_請求書番号.TAX - T_入金合計.KING = 0
				AND		SEIKYUSHONO = R_請求書番号.SEIKYUSHONO
			);
	END LOOP;
--
	--仕入先マスタ残高更新
	UPDATE DM_SHIRE
	SET
	--2014/6/10 Mod Start
	--	ZENZAN = ZENZAN+TSIRKIN-TSIRHENKIN-TSIRNEBIKI+TTAX
	--		-TSHRGENKIN-TSHRTEGATA-TSHRNEBIKI-TSHRSOSAI-TSHRSONOTA-TSHRANZENKAIHI-TSHRFURIKOMITESU
		ZENZAN = ZENZAN+TSIRKIN-TSIRHENKIN-TSIRNEBIKI+TTAX
			-TSHRGENKIN-TSHRTEGATA-TSHRNEBIKI-TSHRSOSAI-TSHRSONOTA-TSHRANZENKAIHI-TSHRFURIKOMITESU
			-TSHRDENSAI-TSHRKIJITSU
	--2014/6/10 Mod End
	,	TSIRKIN = 0
	,	TSIRHENKIN = 0
	,	TSIRNEBIKI = 0
	,	TTAX = 0
	,	TSHRGENKIN = 0
	,	TSHRTEGATA = 0
	,	TSHRNEBIKI = 0
	,	TSHRSOSAI = 0
	,	TSHRSONOTA = 0
	,	TSHRANZENKAIHI = 0
	,	TSHRFURIKOMITESU =0
	--2014/6/10 Add Start
	,	TSHRDENSAI = 0
	,	TSHRKIJITSU = 0
	--2014/6/10 Add End
	,	UDTTIME3 = SYSDATE
	,	UDTUSER3 = (SELECT TANTNM FROM DM_TANT WHERE TANTCD = I_担当者CD)
	,	UDTPG3 = I_更新プログラム
	WHERE
		DELKBN = '0'
	;
--
	--合計売上データの物理削除（過去５年以前を削除）⇒（2024.1.30 １０年以前を削除に変更）
	FOR R_合計売上データ削除 IN (
		SELECT	DT_GURIAGEH.SEIKYUSHONO		AS SEIKYUSHONO
		FROM	DT_GURIAGEH
		,		DT_GURIAGEM
		WHERE	DT_GURIAGEH.SEIKYUSHONO		=	DT_GURIAGEM.SEIKYUSHONO
		AND		DT_GURIAGEH.SEIKYUYMD		<=	TO_CHAR(ADD_MONTHS(TO_DATE(V_確定日付),-120),'YYYYMMDD')
		)LOOP
--明細削除
		DELETE	FROM	DT_GURIAGEM
		WHERE	DT_GURIAGEM.SEIKYUSHONO	=	R_合計売上データ削除.SEIKYUSHONO
		;
--見出し削除
		DELETE	FROM	DT_GURIAGEH
		WHERE	DT_GURIAGEH.SEIKYUSHONO	=	R_合計売上データ削除.SEIKYUSHONO
		;
	END LOOP;
--
	UPDATE	DM_KANRI
	SET
		PRINTKBN = '0'
	,	SHRYMD = TO_CHAR(ADD_MONTHS(TO_DATE(MONYMD),+1),'YYYYMMDD')
	,	SHRJIKKOYMD = TO_CHAR(SYSDATE,'YYYYMMDD')
	,	MONKARIYMD = TO_CHAR(ADD_MONTHS(TO_DATE(MONYMD),+1),'YYYYMMDD')
	,	MONYMD = TO_CHAR(ADD_MONTHS(TO_DATE(MONYMD),+1),'YYYYMMDD')
	,	MONJIKKOYMD = TO_CHAR(SYSDATE,'YYYYMMDD')
	;
--
		Pログ.ログ出力(
				  I_事業所CD
				, I_担当者CD
				, I_更新プログラム
				, '0'
				, '正常終了'
				, P共通.DIR_NAME
				, P共通.FILE_NAME
			);
--
	RETURN 0;
	EXCEPTION
	WHEN OTHERS THEN
		Pログ.ログ出力(
				  I_事業所CD
				, I_担当者CD
				, I_更新プログラム
				, '1'
				, '異常終了' || ' ' || sqlcode || ' ' || sqlerrm
				, P共通.DIR_NAME
				, P共通.FILE_NAME
			);
		RAISE;
	--
	END 月次確定更新;
--
END P月次;
